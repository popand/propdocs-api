version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: propdocs-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - DATABASE_URL=postgresql://propdocs:propdocs123@postgres:5432/propdocs_dev
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: propdocs-postgres
    environment:
      - POSTGRES_USER=propdocs
      - POSTGRES_PASSWORD=propdocs123
      - POSTGRES_DB=propdocs_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: propdocs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Test database for running tests
  postgres-test:
    image: postgres:15-alpine
    container_name: propdocs-postgres-test
    environment:
      - POSTGRES_USER=propdocs
      - POSTGRES_PASSWORD=propdocs123
      - POSTGRES_DB=propdocs_test
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - test

volumes:
  postgres_data:
  postgres_test_data:
  redis_data: